apiVersion: v1
kind: Config

urls:
  api: 'https://api.multiversx.com'
  swagger:
    - 'https://microservice.multiversx.com'
    - 'https://devnet-microservice.multiversx.com'
    - 'https://testnet-microservice.multiversx.com'
  redis: 'mx-challenge-app-redis-headless'
database:
  host: 'mx-challenge-app-mysql-headless'
  port: 3306
  username: 'root'
  password: 'root'
  name: 'example'

redis:
  architecture: standalone
  image:
    repository: redis
    tag: latest
  auth:
    enabled: false
  service:
    port: 6379

mysql:
  auth:
    rootPassword: root
    database: example
  service:
    port: 3306

mongodb:
  architecture: standalone
  auth:
    rootPassword: root
  persistence:
    enabled: true

prometheus:
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  nodeExporter:
    enabled: false
  
  server:
    global:
      scrape_interval: 6s
      evaluation_interval: 6s
      scrape_timeout: 6s
    extraScrapeConfigs:
      - job_name: 'api'
        metrics_path: /metrics
        static_configs:
          - targets: ['api:4000']
    service:
      type: LoadBalancer
      servicePort: 9090

grafana:
  service:
    type: LoadBalancer
    port: 3010
    targetPort: 3000
  adminUser: admin
  adminPassword: admin

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: '/var/lib/grafana/dashboards/default'
  dashboardsConfigMaps:
    default: "grafana-dashboards"
  
  datasources:
    prometheus.yaml:
      apiVersion: 1
      datasources:
        - name: 'Prometheus'
          type: 'prometheus'
          access: 'proxy'
          url: 'http://mx-challenge-app-prometheus-server:9090'
          isDefault: true
